x-healthcheck-timing: &healthcheck-timing
  interval: 20s
  timeout: 5s
  retries: 3
  start_period: 3s

services:
  verification:
    build:
      context: ./service
      dockerfile: Dockerfile
      target: sast

  db:
    image: shop-service-db:latest
    build: ./db/
    container_name: postgres
    expose:
      - 5432
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - POSTGRES_DB
    depends_on:
      - verification
    restart: always
    networks:
      - backend
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      <<: *healthcheck-timing

  api:
    image: shop-service:latest
    build:
      context: ./service
      dockerfile: Dockerfile
      target: build
    shm_size: 1g
    expose:
      - 8000
    volumes:
      - static_volume:/home/app/web/static
    environment:
      - API_URL
      - API_PORT
      - POSTGRES_HOST
      - POSTGRES_PORT
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - POSTGRES_DB
    depends_on:
      - db
    networks:
      - frontend
      - backend
    healthcheck:
      test: ["CMD-SHELL", "curl --fail http://localhost:8000 || exit 1"]
      <<: *healthcheck-timing

  nginx:
    image: shop-service-router:latest
    build: ./nginx/
    container_name: nginx
    volumes:
      - static_volume:/home/app/web/static
    ports:
      - 80:80
    depends_on:
      - api
    restart: always
    networks:
      - frontend
    healthcheck:
      test: ["CMD-SHELL", "curl --fail http://localhost:80 || exit 1"]
      <<: *healthcheck-timing

volumes:
  postgres_data:
  static_volume:

networks:
  frontend:
    driver: bridge
    ipam:
      config:
        - subnet: "172.16.10.0/24"
  backend:
    driver: bridge
    ipam:
      config:
        - subnet: "192.168.20.0/24"
